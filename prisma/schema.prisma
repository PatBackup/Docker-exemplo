// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
    // binaryTargets = ["native"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id             String           @id @default(uuid())
    name           String
    email          String           @unique
    password       String
    create_at      DateTime         @default(now())
    update_at      DateTime         @updatedAt
    UserPermitions UserPermitions[]
    UsersRules     UsersRules[]

    @@map("users")
}

model Product {
    id              String            @id @default(uuid())
    name            String
    bar_code        String            @unique
    price           Decimal
    create_at       DateTime          @default(now())
    ProductCategory ProductCategory[]

    @@map("products")
}

model Category {
    id              String            @id @default(uuid())
    name            String
    ProductCategory ProductCategory[]

    @@map("categories")
}

model Permition {
    id              String            @id @default(uuid())
    name            String
    UserPermitions  UserPermitions[]
    PermitionsRules PermitionsRules[]

    @@map("permitions")
}

model Rules {
    id              String            @id @default(uuid())
    name            String
    PermitionsRules PermitionsRules[]
    UsersRules      UsersRules[]

    @@map("rules")
}

model ProductCategory {
    id          String   @id @default(uuid())
    id_product  String
    product     Product  @relation(fields: [id_product], references: [id])
    id_category String
    category    Category @relation(fields: [id_category], references: [id])

    @@map("products_categories")
}

model UserPermitions {
    id           String    @id @default(uuid())
    id_user      String
    user         User      @relation(fields: [id_user], references: [id])
    id_permition String
    permition    Permition @relation(fields: [id_permition], references: [id])

    @@map("users_permitions")
}

model PermitionsRules {
    id           String    @id @default(uuid())
    id_rules     String
    rules        Rules     @relation(fields: [id_rules], references: [id])
    id_permition String
    permition    Permition @relation(fields: [id_permition], references: [id])

    @@map("rules_permitions")
}

model UsersRules {
    id       String @id @default(uuid())
    id_user  String
    user     User   @relation(fields: [id_user], references: [id])
    id_rules String
    rules    Rules  @relation(fields: [id_rules], references: [id])

    @@map("users_rules")
}
